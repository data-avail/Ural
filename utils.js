// Generated by CoffeeScript 1.3.3
(function() {
  var Utils,
    __hasProp = {}.hasOwnProperty;

  Utils = (function() {

    function Utils() {}

    Utils.prototype.getClassName = function(obj) {
      if (typeof obj !== "object" || obj === null) {
        return false;
      }
      return /(\w+)\(/.exec(obj.constructor.toString())[1];
    };

    Utils.prototype.getKey = function(hashtable, index) {
      var cnt, key;
      cnt = 0;
      for (key in hashtable) {
        if (!__hasProp.call(hashtable, key)) continue;
        if (cnt === index) {
          return key;
        }
        cnt++;
      }
      return null;
    };

    Utils.prototype.firstKey = function(hashtable) {
      return this.getKey(hashtable, 0);
    };

    Utils.prototype.first = function(hashtable) {
      return hashtable[this.firstKey(hashtable)];
    };

    Utils.prototype.toHashTable = function(array) {
      var hashtable, i, _i, _len;
      hashtable = [];
      for (_i = 0, _len = array.length; _i < _len; _i++) {
        i = array[_i];
        hashtable[i[this.getKey(i, 0)]] = i[this.getKey(i, 1)];
      }
      return hashtable;
    };

    Utils.prototype.urlAddSearch = function(baseUrl, prms) {
      var i, url, _i, _ref;
      url = arguments[0];
      if (!url) {
        throw "baseUrl must be defined";
      }
      for (i = _i = 1, _ref = arguments.length - 1; 1 <= _ref ? _i <= _ref : _i >= _ref; i = 1 <= _ref ? ++_i : --_i) {
        if (arguments[i]) {
          if (url.indexOf("?") === -1) {
            url += "?";
          } else {
            url += "&";
          }
          url += arguments[i];
        }
      }
      return url;
    };

    Utils.prototype.clone = function(src, exceptProps) {
      var prop, res;
      res = {};
      exceptProps = Array.prototype.slice.call(arguments).slice(1);
      for (prop in src) {
        if (!__hasProp.call(src, prop)) continue;
        if (exceptProps.indexOf(prop) === -1) {
          res[prop] = src[prop];
        }
      }
      return res;
    };

    Utils.prototype.argsToArray = function(args) {
      var i, _i, _ref, _results;
      _results = [];
      for (i = _i = 0, _ref = args.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        _results.push(args[i]);
      }
      return _results;
    };

    Utils.prototype.trim = function(str) {
      return str.replace(/^\s\s*/, '').replace(/\s\s*$/, '');
    };

    Utils.prototype.wrapHtml = function(html) {
      return "<div>" + html + "</div>";
    };

    /*
        is complex object (contatins nested properties for processing)
    */


    Utils.prototype.isComplex = function(obj) {
      return typeof obj === "object" && !(obj instanceof Date);
    };

    Utils.prototype.iterObj = function(obj, iter) {
      var prop, val, _obj, _results, _v, _val;
      _obj = ko.utils.unwrapObservable(obj);
      if (_obj === null) {
        return;
      }
      _results = [];
      for (prop in _obj) {
        if (!__hasProp.call(_obj, prop)) continue;
        if (prop !== "__ko_mapping__") {
          val = _obj[prop];
          _val = ko.utils.unwrapObservable(val);
          if (Array.isArray(_val)) {
            if (iter("array", val, _val, prop) !== false) {
              _results.push((function() {
                var _i, _len, _results1;
                _results1 = [];
                for (_i = 0, _len = _val.length; _i < _len; _i++) {
                  _v = _val[_i];
                  _results1.push(_u.iterObj(_v, iter));
                }
                return _results1;
              })());
            } else {
              _results.push(void 0);
            }
          } else if (_u.isComplex(_val)) {
            if (iter("object", val, _val, prop) !== false) {
              _results.push(_u.iterObj(val, iter));
            } else {
              _results.push(void 0);
            }
          } else {
            _results.push(iter("value", val, _val));
          }
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    Utils.prototype.removeFromArray = function(array, e) {
      var t, _ref;
      if ((t = array.indexOf(e)) > -1) {
        return ([].splice.apply(array, [t, t - t + 1].concat(_ref = [])), _ref);
      }
    };

    Utils.prototype.toastrMsg = function(type, msg, cap) {
      var f, func;
      func = null;
      switch (type) {
        case "success":
          f = toastr.success;
          break;
        case "info":
          f = toastr.info;
          break;
        case "warn":
          f = toastr.warning;
          break;
        case "error":
          f = toastr.error;
      }
      if (f) {
        return f(msg, cap);
      }
    };

    Utils.prototype.replaceFieldVal = function(obj, origVal, replaceVal) {
      var prop, _results;
      _results = [];
      for (prop in obj) {
        if (!__hasProp.call(obj, prop)) continue;
        if (typeof obj[prop] === "object") {
          _results.push(this.replaceFieldVal(obj[prop], origVal, replaceVal));
        } else if (obj[prop] === origVal) {
          _results.push(obj[prop] = replaceVal);
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    Utils.prototype.popup = function(url, width, height) {
      var h, l, t, w;
      if (navigator.userAgent.toLowerCase().indexOf("opera") !== -1) {
        w = document.body.offsetWidth;
        h = document.body.offsetHeight;
      } else {
        w = screen.width;
        h = screen.height;
      }
      t = Math.floor((h - height) / 2 - 14);
      l = Math.floor((w - width) / 2 - 5);
      return window.open(url, "", "status=no,scrollbars=yes,resizable=yes,width=" + width + ",height=" + height + ",top=" + t + ",left=" + l);
    };

    Utils.prototype.str2hash = function(str) {
      var char, hash, i, _i, _ref;
      hash = 0;
      if (this.length === 0) {
        hash;

      }
      for (i = _i = 0, _ref = this.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        char = this.charCodeAt(i);
        hash = ((hash << 5) - hash) + char;
        hash = hash & hash;
      }
      return hash;
    };

    Utils.prototype.lowerize = function(str) {
      str += '';
      return str.charAt(0).toLowerCase() + str.substr(1);
    };

    Utils.prototype.roundDecimals = function(val, dec) {
      return Math.round(val * Math.pow(10, dec)) / Math.pow(10, dec);
    };

    return Utils;

  })();

  this._u = new Utils();

}).call(this);
