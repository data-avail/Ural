// Generated by CoffeeScript 1.3.3
(function() {

  define(function() {
    /*
      window.applicationCache.addEventListener 'updateready', ->
        if (window.applicationCache.status == window.applicationCache.UPDATEREADY)
          # Browser downloaded a new app cache.
          # Swap it in and reload the page to get the new hotness.
          window.applicationCache.swapCache()
          window.location.reload();
    */

    var _start;
    require(["Libs/jquery"], function() {
      var appPath;
      appPath = $("[data-main]").attr("data-main-path");
      appPath = appPath ? appPath[0] : "/App";
      require.config({
        baseUrl: appPath,
        paths: {
          jquery: "Ural/Libs/jquery",
          knockout: "Ural/Libs/knockout",
          "knockout.mapping": "Ural/Libs/knockout.mapping",
          "knockout.validation": "Ural/Libs/knockout.validation",
          "knockout.validation.extensions": "Ural/Libs/knockout.validation.extensions",
          "knockout.validation.ru": "Ural/Libs/i18n/knockout.validation-ru",
          "knockout.deferred": "Ural/Libs/knockout-deferred-updates",
          hasher: "Ural/Libs/hasher",
          crossroads: "Ural/Libs/crossroads",
          signals: "Ural/Libs/signals",
          "jquery.ui": "Ural/Libs/jquery.ui",
          jsrender: "Ural/Libs/jsrender",
          pluralize: "Ural/Libs/pluralize",
          async: "Ural/Libs/async",
          utils: "Ural/utils",
          "underscore.string": "Ural/Libs/underscore.string",
          moment: "Ural/Libs/moment"
        },
        shim: {
          knockout: ["jquery"],
          "jquery.ui": ["jquery"],
          "jsrender": ["jquery"],
          "knockout.mapping": ["knockout"],
          "knockout.validation": ["knockout"],
          "knockout.deferred": ["knockout"],
          "knockout.validation.ru": ["knockout", "knockout.validation"],
          "knockout.validation.extensions": ["knockout", "knockout.validation"]
        }
      });
      return require(["knockout", "knockout.mapping", "underscore.string", "knockout.validation", "knockout.validation.ru", "knockout.validation.extensions", "jquery.ui", "jsrender", "pluralize", "async", "utils", "moment"], function(ko, koMapping, _str) {
        ko.mapping = koMapping;
        window.ko = ko;
        window._ = {
          str: _str._s
        };
        return require(["router", "setup"], function(router, setup) {
          if (!setup || !setup.onComplete) {
            return _start(router);
          } else if (setup.onComplete) {
            return setup.onComplete(function() {
              return _start(router);
            });
          }
        });
      });
    });
    return _start = function(router) {
      var rr;
      ko.validation.configure({
        registerExtenders: true,
        messagesOnModified: false,
        insertMessages: false,
        parseInputAttributes: false,
        messageTemplate: null
      });
      rr = new router.Router();
      return rr.startRouting();
    };
  });

}).call(this);
