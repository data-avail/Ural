// Generated by CoffeeScript 1.3.3
(function() {

  define(function() {
    var FilterRange;
    FilterRange = (function() {

      function FilterRange(fieldFrom, fieldTo, from, to, valSerializer) {
        var _ref,
          _this = this;
        this.fieldFrom = fieldFrom;
        this.fieldTo = fieldTo;
        this.valSerializer = valSerializer;
        this.from = ko.observable(from);
        this.to = ko.observable(to);
        this.expr = ko.computed(function() {
          var json;
          json = eval("({'" + fieldFrom + "' : {'$gte' : null}, '" + fieldTo + "' : {'$lte' : null}})");
          json[fieldFrom].$gte = _this.from();
          json[fieldTo].$lte = _this.to();
          return json;
        });
        if ((_ref = this.valSerializer) == null) {
          this.valSerializer = {
            serialize: function(val) {
              return val;
            },
            deserialize: function(obj) {
              return obj;
            }
          };
        }
      }

      FilterRange.prototype.update = function(fromExpr) {
        var from, to;
        from = fromExpr[this.fieldFrom].$gte;
        to = fromExpr[this.fieldTo].$lte;
        if (this.valSerializer) {
          from = this.valSerializer.deserialize(from);
          to = this.valSerializer.deserialize(to);
        }
        this.from(from);
        return this.to(to);
      };

      FilterRange.prototype.serialize = function() {
        return {
          range: {
            from: this.valSerializer.serialize(this.from()),
            to: this.valSerializer.serialize(this.to())
          }
        };
      };

      FilterRange.prototype.deserialize = function(obj) {
        if (obj.range) {
          this.from(this.valSerializer.deserialize(obj.range.from));
          return this.to(this.valSerializer.deserialize(obj.range.to));
        }
      };

      return FilterRange;

    })();
    return {
      FilterRange: FilterRange
    };
  });

}).call(this);
