// Generated by CoffeeScript 1.3.3
(function() {

  define(function() {
    var OptSingle;
    OptSingle = (function() {

      function OptSingle(field, opts, selectedOpt, valSerializer) {
        var t, _i, _len, _ref,
          _this = this;
        this.field = field;
        this.valSerializer = valSerializer;
        this.opts = ko.observableArray();
        if (opts) {
          for (_i = 0, _len = opts.length; _i < _len; _i++) {
            t = opts[_i];
            this.opts.push(t);
          }
        }
        this.selectedOpt = ko.observable(selectedOpt);
        this.expr = ko.computed(function() {
          if (_this.selectedOpt()) {
            return eval("({'" + field + "' : " + (_this.getExprArg(_this.selectedOpt())) + "})");
          }
        });
        if ((_ref = this.valSerializer) == null) {
          this.valSerializer = {
            serialize: function(val) {
              return val;
            },
            deserialize: function(obj) {
              return obj;
            }
          };
        }
      }

      OptSingle.prototype.update = function(fromExpr) {
        var val;
        val = fromExpr[this.field];
        val = this.valSerializer.deserialize(val);
        return this.selectedOpt(val);
      };

      OptSingle.prototype.getExprArg = function(opt) {
        if (opt.id) {
          opt = opt.id();
        }
        if (typeof opt === "string") {
          return "'" + opt + "'";
        } else {
          return opt;
        }
      };

      OptSingle.prototype.text = function() {
        if (this.selectedOpt().id && this.selectedOpt().name) {
          return this._getOptName(this.selectedOpt().id());
        }
      };

      OptSingle.prototype._getOptName = function(id) {
        return this.opts().filter(function(f) {
          return f.id() === id;
        })[0].name();
      };

      OptSingle.prototype.serialize = function() {
        return this.valSerializer.serialize(this.selectedOpt());
      };

      OptSingle.prototype.deserialize = function(obj) {
        return this.selectedOpt(this.valSerializer.deserialize(obj));
      };

      return OptSingle;

    })();
    return {
      OptSingle: OptSingle
    };
  });

}).call(this);
